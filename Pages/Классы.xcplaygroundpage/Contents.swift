//: [Previous](@previous)

import Foundation

//в классах можно:
//1.Объявлять свойства для хранения значений
//2.Объявлять методы, чтобы обеспечить функциональность
//3.Объявлять индексы, чтобы обеспечить доступ к их значениям, через синтаксис индексов
//4.Объявлять инициализаторы, чтобы установить их первоначальное состояние
//5.Они оба могут быть расширены, чтобы расширить их функционал за пределами стандартной реализации
//6.Они оба могут соответствовать протоколам, для обеспечения стандартной функциональности определенного типа

//Классы имеют дополнительные возможности, которых нет у структур:
//1.Наследование позволяет одному классу наследовать характеристики другого
//2.Приведение типов позволяет проверить и интерпретировать тип экземпляра класса в процессе выполнения
//3.Деинициализаторы позволяют экземпляру класса освободить любые ресурсы, которые он использовал
//4.Подсчет ссылок допускает более чем одну ссылку на экземпляр класса.

class Human {
    
    var name = ""
    var age: Int?
    var hairs = true
    
    func description() -> String {
    
        if let humanAge = age {
            return "My name is \(name) and I am \(humanAge) years old"
        } else {
            return "My name is \(name)"
        }
    }
}

//экземпляры/объекты класса
let humanOne = Human()
humanOne.name = "Natasha"
print(humanOne.description())

let humanTwo = Human()
humanTwo.name = "Vadim"
humanTwo.age = 15
print(humanTwo.description())

